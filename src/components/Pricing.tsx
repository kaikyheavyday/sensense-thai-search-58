import { Card, CardContent, CardHeader } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Check, Star } from 'lucide-react';

const Pricing = () => {
  const plans = [
    {
      name: "Free",
      price: "0",
      period: "‡∏ü‡∏£‡∏µ",
      description: "‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏•‡πá‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ",
      features: [
        "1,000 ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
        "Core search functionality",
        "Basic analytics",
        "‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢",
        "Email support"
      ],
      limitations: [
        "‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Voice/Image search",
        "Analytics ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô"
      ],
      cta: "‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏ü‡∏£‡∏µ",
      popular: false,
      ctaVariant: "outline" as const
    },
    {
      name: "Pro",
      price: "5,000",
      period: "/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
      description: "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏•‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ Smart Connect",
      features: [
        "50,000 - 500,000 ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
        "Smart Connect (Self-service mapping)",
        "Multimodal search ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô",
        "Advanced analytics & reporting",
        "Personalization engine",
        "Priority email support",
        "API access",
        "‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å plugins"
      ],
      limitations: [],
      cta: "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏•‡∏≠‡∏á 7 ‡∏ß‡∏±‡∏ô",
      popular: true,
      ctaVariant: "primary" as const
    },
    {
      name: "Enterprise",
      price: "‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤",
      period: "‡∏£‡∏≤‡∏Ñ‡∏≤",
      description: "‡πÇ‡∏ã‡∏•‡∏π‡∏ä‡∏±‡∏ô‡∏Ñ‡∏£‡∏ö‡∏Ñ‡∏£‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£‡πÉ‡∏´‡∏ç‡πà‡πÅ‡∏•‡∏∞ Marketplace",
      features: [
        "Unlimited ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô",
        "Multimodal search ‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö",
        "SenseMap AI (AI Data Mapping)",
        "Knowledge Graph per vertical",
        "99.9% SLA guarantee",
        "On-premise/Hybrid deployment",
        "SSO & Advanced security",
        "24/7 dedicated support",
        "Custom integrations",
        "White-label options"
      ],
      limitations: [],
      cta: "‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ù‡πà‡∏≤‡∏¢‡∏Ç‡∏≤‡∏¢",
      popular: false,
      ctaVariant: "secondary" as const
    }
  ];

  return (
    <section id="pricing" className="py-20 bg-background-subtle">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <Badge className="bg-primary/10 text-primary border-primary/20 mb-4">
            üí∞ ‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
          </Badge>
          <h2 className="text-3xl sm:text-4xl font-bold text-foreground mb-4">
            ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
          </h2>
          <p className="text-lg text-muted-foreground max-w-3xl mx-auto">
            ‡∏ó‡∏∏‡∏Å‡πÅ‡∏ú‡∏ô‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡∏°‡∏µ API & Plugins ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î
          </p>
        </div>

        <div className="grid lg:grid-cols-3 gap-8">
          {plans.map((plan, index) => (
            <Card key={index} className={`relative ${plan.popular ? 'border-primary border-2 shadow-xl' : 'border-border'} card-glass hover:shadow-xl transition-all duration-300`}>
              {plan.popular && (
                <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                  <Badge className="bg-primary text-primary-foreground px-4 py-1 flex items-center space-x-1">
                    <Star className="h-4 w-4" />
                    <span>‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</span>
                  </Badge>
                </div>
              )}

              <CardHeader className="text-center pb-6">
                <h3 className="text-2xl font-bold text-foreground">{plan.name}</h3>
                <div className="space-y-2">
                  <div className="flex items-baseline justify-center space-x-1">
                    {plan.price === "‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤" ? (
                      <span className="text-3xl font-bold text-primary">{plan.price}</span>
                    ) : (
                      <>
                        <span className="text-sm text-muted-foreground">‡∏ø</span>
                        <span className="text-4xl font-bold text-primary">{plan.price}</span>
                      </>
                    )}
                    <span className="text-muted-foreground">{plan.period}</span>
                  </div>
                  <p className="text-sm text-muted-foreground">{plan.description}</p>
                </div>
              </CardHeader>

              <CardContent className="space-y-6">
                {/* Features */}
                <div className="space-y-3">
                  {plan.features.map((feature, idx) => (
                    <div key={idx} className="flex items-start space-x-3">
                      <Check className="h-5 w-5 text-accent mt-0.5 flex-shrink-0" />
                      <span className="text-sm text-foreground">{feature}</span>
                    </div>
                  ))}
                  
                  {plan.limitations.length > 0 && (
                    <div className="pt-3 border-t border-border/50">
                      <p className="text-xs text-muted-foreground mb-2">‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î:</p>
                      {plan.limitations.map((limitation, idx) => (
                        <div key={idx} className="flex items-start space-x-3">
                          <div className="w-1 h-1 bg-muted-foreground rounded-full mt-2 flex-shrink-0"></div>
                          <span className="text-xs text-muted-foreground">{limitation}</span>
                        </div>
                      ))}
                    </div>
                  )}
                </div>

                {/* CTA */}
                <Button 
                  className={`w-full ${plan.ctaVariant === 'primary' ? 'btn-primary' : plan.ctaVariant === 'secondary' ? 'btn-secondary' : ''}`}
                  variant={plan.ctaVariant === 'primary' ? 'default' : plan.ctaVariant}
                  size="lg"
                >
                  {plan.cta}
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>

        {/* Bottom notes */}
        <div className="mt-16 text-center space-y-4">
          <div className="flex flex-wrap justify-center gap-6 text-sm text-muted-foreground">
            <div className="flex items-center space-x-2">
              <Check className="h-4 w-4 text-accent" />
              <span>‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ü‡∏£‡∏µ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ã‡πà‡∏≠‡∏ô‡πÄ‡∏£‡πâ‡∏ô</span>
            </div>
            <div className="flex items-center space-x-2">
              <Check className="h-4 w-4 text-accent" />
              <span>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠</span>
            </div>
            <div className="flex items-center space-x-2">
              <Check className="h-4 w-4 text-accent" />
              <span>‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î/‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÄ‡∏Å‡∏£‡∏î‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î</span>
            </div>
          </div>

          <Button variant="outline" className="mt-4">
            ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
          </Button>
        </div>
      </div>
    </section>
  );
};

export default Pricing;